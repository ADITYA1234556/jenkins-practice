name: Python app

#on:
#  release:
#    types: [published]
on:
  workflow_dispatch:
#on:
#  schedule:
#    - cron: '0 0 * * *'
#on:
#  issues:
#    types: [opened, edited, closed]
#on: [push, pull_request]
  #push:
#    branches:
#      - master
#  pull_request:
#    branches:
#      - master

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  EMAIL: ${{ secrets.EMAIL_USERNAME }}
  PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
  AWS_REGION: eu-west-2

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
        python-version: [ 2.7, 3.8, 3.12 ]

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup Python
        id: python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: |
          python3 -m pytest test_app.py 

      - name: Package the application
        run: |
          zip -r app.zip app.py requirements.txt Procfile test_app.py

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: app-zip
          path: app.zip

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Verify AWS credentials
        run: aws sts get-caller-identity

      - name: List files
        run: |
          ls -R

      - name: Deploy to production
        run: |
          echo "Deploying to production"
          aws s3 cp . s3://111-aditya-kms/githubartifact/ --recursive --debug

      # Optional: Notification if the deployment is successful
      - name: Notify on Success
        if: success()
        run: |
          echo "Deployment successful"

      # Optional: Notification if the deployment fails
      - name: Notify on Failure
        if: failure()
        run: |
          echo "Deployment failed"   
      
      - name: Send Success Notification Email
        if: success()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          from: "adityanavaneethan98@gmail.com"
          to: "adityanavaneethan98@gmail.com"
          subject: "Jenkins Build Successful: ${{ github.repository }} - Build #${{ github.run_id }}"
          body: "The build was successful! You can access it here: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"

      - name: Send Failure Notification Email
        if: failure()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          from: "adityanavaneethan98@gmail.com"
          to: "adityanavaneethan98@gmail.com"
          subject: "GitHub Build Failed: ${{ github.repository }} - Build #${{ github.run_id }}"
          body: "The build failed! You can access it here: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
